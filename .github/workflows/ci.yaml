name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Clean Install dependencies
        run: |
          cd angular-react-starter/angular
          npm ci
        continue-on-error: false

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Xvfb
        uses: coactions/setup-xvfb@v1
        with:
          run: npm test -- --watch=false --progress=false --browsers=ChromeHeadless
          working-directory: angular-react-starter/angular
        continue-on-error: false

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        continue-on-error: false

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.actor }}/angular-react-starter-image .
        continue-on-error: false

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.actor }}/angular-react-starter-image:latest
        continue-on-error: false

  mail:
    runs-on: ubuntu-latest
    needs: [build, test, docker]
    if: always()
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: GITHUB ACTIONS JOB RESULT
          to: sowecthal@gmail.com
          from: GitHub Actions Pipeline
          body: |
            Build job of ${{ github.repository }} completed.
            Job status is ${{ job.status }}.
            - Build: ${{ needs.build.result }}
            - Tests: ${{ needs.test.result }}
            - Docker build: ${{ needs.docker.result }}